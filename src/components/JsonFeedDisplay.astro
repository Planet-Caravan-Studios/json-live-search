---

---

<div class="JsonFeedDisplay">
	<select id="searchField">
	        <option value="name">Name</option>
	        <option value="category">Category</option>
	        <option value="sub-category">Sub-Category</option>
	    </select>
	    <input type="text" id="searchInput" placeholder="Search...">
	    <div class="container" id="cardsContainer"></div>
</div>


<style>
	.Info{
		height: 100%;
	}
	.titleSection{
		height: 100px;
		padding:var(--padding-1);
		border-bottom: solid var(--border-width) var(--border-color);
		text-align: center;
		display: flex;
		justify-content: center;
		align-items: center;
	}
	.bodySection{
		height: calc(100% - 200px);
		overflow-y: scroll;
		padding:var(--padding-1);
	}
	.authorSection{
		height: 100px;
		padding:var(--padding-1);
		border-top: solid var(--border-width) var(--border-color);
		display: flex;
		justify-content: center;
		align-items: center;
	}
</style>

<script type="text/javascript">
	document.addEventListener('DOMContentLoaded', () => {
	    const data = [
	        { name: 'John', description: 'Description of Item 1', category: 'cat-A', 'sub-category': 'sub-1' },
            { name: 'Paul', description: 'Description of Item 2', category: 'cat-B', 'sub-category': 'sub-2' },
            { name: 'George', description: 'Description of Item 3', category: 'cat-C', 'sub-category': 'sub-3' },
            { name: 'Ringo', description: 'Description of Item 4', category: 'cat-C', 'sub-category': 'sub-4' },
            // Add more items as needed
	    ];

	    const searchInput = document.getElementById('searchInput');
        const cardsContainer = document.getElementById('cardsContainer');
        const searchField = document.getElementById('searchField');

	    function createCard(item) {
            const card = document.createElement('div');
            card.classList.add('card');
            card.innerHTML = `<strong>${item.name}</strong><p>${item.description}</p><p>Category: ${item.category}, </p><p>Sub-Category: ${item['sub-category']}</p>`;
            return card;
        }

	    function updateDisplay(filteredData) {
            cardsContainer.innerHTML = ''; // Clear current content
            filteredData.forEach(item => {
                cardsContainer.appendChild(createCard(item));
            });
        }

        // Initially display all items
        updateDisplay(data);

        searchInput.addEventListener('input', () => {
            const searchText = searchInput.value.toLowerCase();
            const selectedField = searchField.value;
            const filteredData = data.filter(item => item[selectedField].toLowerCase().includes(searchText));
            updateDisplay(filteredData);
        });
	});

</script>